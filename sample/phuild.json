{
	/*	---------------------------------------------------------------------------	
		パス設定
	 */
	"paths": {
		//	ソース
		"source": "./public_html"
		//	ビルド用の一時フォルダー
		, "temporary": "./tmp"
		//	ビルド先
		, "publish": "./published"
	},
	/*	---------------------------------------------------------------------------	
		実行できるタスク
	 */
	"tasks": {
		/*	---------------------------------------------------------------------------	
			クリーン
			clean

			ビルド・一時フォルダーを削除する
		 */
		"clean": [
			{
				"task": "clean-tmp"
			}
			, {
				"task": "clean-publish"
			}
		]
		, "clean-tmp": [
			{
				"action": "clean"
				, "target": "temporary"
			}
		]
		, "clean-publish": [
			{
				"action": "clean"
				, "target": "publish"
			}
		]

		/*	---------------------------------------------------------------------------	
			ローカルホストでウェブサーバーを開いてサイトを提供する （公開版）
			serve-prod
		 */
		, "serve-prod": [
			{
				"task": "build"
			}
			, {
				"action": "serve"
				, "port": 8080
				, "root": "publish"
			}
		]

		/*	---------------------------------------------------------------------------	
			ローカルホストでウェブサーバーを開いてサイトを提供する　（開発版）
			serve
		 */
		, "serve": [
			{
				"action": "serve"
				, "root": "source"
			}
		]

		/*	---------------------------------------------------------------------------	
			普段ビルド
			build

			＊　ファイル名を変えずにCSS・JSを圧縮する
			＊　複数のスクリプト・スタイルをマージして一個のファイルにする。
			＊　CSS・JS・画像・フォントなどのファイル名をバージョン化する。（内容のハッシュをファイル名にいれる。例：jquery.js -> jquery.14bhadlfhha.js）
			＊　HTML・CSS・JSにあるURLをバージョン化されたパスに更新。(src・hrefなど)
			＊　設定ファイルは本番用のに切り替え　（.htaccess.prodなど）
			＊　開発のドメイン名を本番のドメインに書き換える
			＊　HTMLの空白類文字は複数のある場合に一個にする
			＊　問い合わせフォームのHTMLにある絶対パスを相対パスに書き換える
		 */
		, "build": [
			//	一時フォルダーを削除
			{
				"task": "clean-tmp"
			}
			//	ソースを一時フォルダーへコピー
			, {
				"action": "copy"
				, "src": "source"
				, "dest": "temporary"
				, "clean_first": true
				, "change_directory": true
			}
			//	CSSを圧縮
			, {
				"action": "minify_css"
				//	圧縮したファイルの拡張子を「.css」そのままにする
				, "change_ext": ".css"
				//	ファイル名が「.min.css」で終わる場合は放置する
				, "ignore": "min\\.css"
				//	@importルールの場合は、インポートされるファイルをインポートするファイルに埋める
				, "inline_imports": true
				//	もとのファイルを削除しない　（拡張子を変える場合に必要）
				, "keep_original": true
			}
			//	JavaScriptを圧縮
			, {
				"action": "minify_js"
				//	圧縮したファイルの拡張子を「.js」そのままにする
				, "change_ext": ".js"
				//	ファイル名が「.min.js」で終わる場合は放置する
				, "ignore": "min\\.js$"
				//	もとのファイルを削除しない　（拡張子を変える場合に必要）
				, "keep_original": true
			}
			//	CSS・JS・画像・フォントなどのようなインクルード・ファイルをバージョン化する。
			, {
				"action": "version_assets"
				, "hash_length": 32
				, "keep_original": true
			}
			//	HTMLファイルのテキスト内容を書き換える。開発ドメインを本番のに。
			, {
				"action": "rewrite_text"
				//	「.html」で終わるファイルのみ
				, "include": ["\\.html$"]
				, "rewrites": [
					{
						//	下記のパタンを
						"pattern": "ABC"
						//	下記のストリングに
						, "replace": "DEF"
					}
				]
			}
			//	HTMLを編集
			, {
				"action": "transform_html"
				//	コメントを消す　（IE専用コメントは放置）
				, "remove_comments": true
				//	バージョン化されたファイルへのパスを書き換える
				, "rewrite_urls": true
				//	指定のクラス名がついてる子供のないタグを消す
				, "remove_classes": "_build-remove"
				//	空白類文字は複数のある場合に一個にする
				, "compact_lines": true
			}
			//	CSSの編集
			, {
				"action": "transform_css"
				//	バージョン化されたファイルへのパスを書き換える
				, "rewrite_urls": true
			}
			//	JavaScriptの編集
			, {
				"action": "transform_js"
				//	バージョン化されたファイルへのパスを書き換える
				, "rewrite_urls": true
			}
			//	HTMLに連続書いたスクリプト・スタイルタグがある場合、その複数のファイルをマージする（一個のファイルにする）
			//	メディアクエリ・インラインスタイルやスクリプト・見つからないファイルは全て処理されるので安心してください。
			, {
				"action": "merge_html_assets"
				//	マージするJSの保存先
				, "script_dir": "inc\/js"
				//	マージするJSのファイル名パタン
				, "script_name": "script_$HASH$.js"
				//	マージしたCSSの保存先
				, "style_dir": "inc\/css"
				//	マージしたCSSのファイル名パタン
				, "style_name": "style_$HASH$.css"
				//	Less CSSのスタイル・タグをCSSタグにする
				, "less_to_css": true
				//	指定のクラスがついてる場合、マージしない
				, "separator_class": "_build-nomerge"
				//	ファイル内容のハッシュをファイル名に埋めるとき、ハッシュの文字数。最大32文字。
				, "hash_length": 32
			}
			//	環境別のファイルの中から本番用の選択する
			, {
				"action": "env_specific"
				//	例： 「.htaccess.prod」を「.htaccess」に上書きする。
				, "active": ".prod"
			}
			//	公開フォルダーを削除
			, {
				"task": "clean-publish"
			}
			//	一時フォルダーを公開フォルダーにコピー
			, {
				"action": "copy"
				, "src": "temporary"
				, "dest": "publish"
				, "added_only": true
				, "clean_first": true
			}
			//	一時フォルダーを削除
			, {
				"task": "clean-tmp"
			}
		]
	}
}